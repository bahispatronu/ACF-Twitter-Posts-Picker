<?php

if ( ! defined( 'ABSPATH' ) ) {
	exit;
}

if ( ! class_exists( 'TwitterPostsPickerFields' ) ) {

	class TwitterPostsPickerFields extends acf_field {

		public $settings = array();

    $this->defaults = array(
      'consumer_key' => 'ZAKa6tmDbQlB1BLGGPMJlGT4l',
      'consumer_secret' => 'H368DYLy6UGca9aJkmQDqnzhR48qaelWj9ac2aHQdo4ClXVICs',
      'access_token'  => '2833697756-pO1BkMKobuqRGbGEalb20wpD0a17vv3FrgJ9GO7',
      'access_secret' => 'vONB45UbwXv7Exi2NyCwXYqU4cP3cAbDdQNe3DzrhXI3G',
      'multiple'          => 0,

    );

    public function __construct( $settings ) {

      $this->name     = 'twitterposts';
      $this->label    = __( 'Twitter Posts', 'acf-twitterposts' );
      $this->category = 'jQuery';
      $this->defaults = array('initial_value' => '');
      parent::__construct();
      $this->settings = $settings;

    }

    public function create_options( $field )
    {
      $field = array_merge($this->defaults, $field);
      $key = $field['name'];
      // Create Field Options HTML
      ?>
      <tr class="field_option field_option_<?php echo $this->name; ?>">
      <td class="label">
        <label><?php _e("Initial Value",'acf'); ?></label>
        <p class="description"><?php _e("The initial value of twitter post field",'acf'); ?></p>
      </td>
      <td>
        <?php
        do_action('acf/create_field', array(
          'type'		=>	'text',
          'name'		=>	'fields['.$key.'][initial_value]',
          'value'		=>	$field[array('initial_value')],
        ));

        ?>
      </td>
      </tr>
      <?php

    }


    public function create_field( $field )
    {
    	$field = array_merge($this->defaults, $field);

      echo "<pre>";
      print_r($field['value']);
      echo "</pre>";
    	?>
    	<div>
        <input type="text" name="<?php echo esc_attr( $field['name'] ) ?>[]" placeholder="<?php _e( 'search for twitter posts', 'acf-twitterposts' ); ?>"
        value=''>

    	</div>
    	<?php
    }

  }

new TwitterPostsPickerFields();
}
